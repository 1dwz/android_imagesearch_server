************* Module main_instance
main_instance.py:17:0: C0301: Line too long (139/100) (line-too-long)
main_instance.py:55:0: C0301: Line too long (117/100) (line-too-long)
main_instance.py:110:0: C0301: Line too long (114/100) (line-too-long)
main_instance.py:167:0: C0301: Line too long (113/100) (line-too-long)
main_instance.py:43:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main_instance.py:54:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main_instance.py:116:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main_instance.py:49:4: W0612: Unused variable 'get_typed_option' (unused-variable)
main_instance.py:165:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main_instance.py:166:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main_instance.py:171:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main_instance.py:204:11: W0718: Catching too general exception Exception (broad-exception-caught)
main_instance.py:178:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main_instance.py:195:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main_instance.py:202:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main_instance.py:205:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module manager
manager.py:24:0: C0301: Line too long (138/100) (line-too-long)
manager.py:71:0: C0301: Line too long (104/100) (line-too-long)
manager.py:103:0: C0301: Line too long (110/100) (line-too-long)
manager.py:108:0: C0301: Line too long (104/100) (line-too-long)
manager.py:116:0: C0301: Line too long (117/100) (line-too-long)
manager.py:121:0: C0301: Line too long (110/100) (line-too-long)
manager.py:126:0: C0301: Line too long (102/100) (line-too-long)
manager.py:131:0: C0301: Line too long (103/100) (line-too-long)
manager.py:140:0: C0301: Line too long (108/100) (line-too-long)
manager.py:146:0: C0301: Line too long (115/100) (line-too-long)
manager.py:180:0: C0301: Line too long (125/100) (line-too-long)
manager.py:187:0: C0301: Line too long (111/100) (line-too-long)
manager.py:189:0: C0301: Line too long (132/100) (line-too-long)
manager.py:197:0: C0301: Line too long (105/100) (line-too-long)
manager.py:254:0: C0301: Line too long (122/100) (line-too-long)
manager.py:272:0: C0301: Line too long (107/100) (line-too-long)
manager.py:285:0: C0301: Line too long (219/100) (line-too-long)
manager.py:288:0: C0301: Line too long (123/100) (line-too-long)
manager.py:290:0: C0301: Line too long (187/100) (line-too-long)
manager.py:297:0: C0301: Line too long (178/100) (line-too-long)
manager.py:316:0: C0301: Line too long (104/100) (line-too-long)
manager.py:324:0: C0301: Line too long (167/100) (line-too-long)
manager.py:364:0: C0301: Line too long (132/100) (line-too-long)
manager.py:395:0: C0301: Line too long (120/100) (line-too-long)
manager.py:436:0: C0301: Line too long (106/100) (line-too-long)
manager.py:447:0: C0301: Line too long (131/100) (line-too-long)
manager.py:451:0: C0301: Line too long (127/100) (line-too-long)
manager.py:471:0: C0301: Line too long (140/100) (line-too-long)
manager.py:476:0: C0301: Line too long (104/100) (line-too-long)
manager.py:482:0: C0301: Line too long (135/100) (line-too-long)
manager.py:493:0: C0301: Line too long (117/100) (line-too-long)
manager.py:524:0: C0301: Line too long (105/100) (line-too-long)
manager.py:529:0: C0301: Line too long (114/100) (line-too-long)
manager.py:530:0: C0301: Line too long (155/100) (line-too-long)
manager.py:531:0: C0301: Line too long (179/100) (line-too-long)
manager.py:547:0: C0301: Line too long (107/100) (line-too-long)
manager.py:561:0: C0301: Line too long (131/100) (line-too-long)
manager.py:626:0: C0301: Line too long (114/100) (line-too-long)
manager.py:634:0: C0301: Line too long (108/100) (line-too-long)
manager.py:639:0: C0301: Line too long (103/100) (line-too-long)
manager.py:644:0: C0301: Line too long (108/100) (line-too-long)
manager.py:651:0: C0301: Line too long (119/100) (line-too-long)
manager.py:693:0: C0301: Line too long (110/100) (line-too-long)
manager.py:698:0: C0301: Line too long (107/100) (line-too-long)
manager.py:717:0: C0301: Line too long (129/100) (line-too-long)
manager.py:725:0: C0301: Line too long (107/100) (line-too-long)
manager.py:830:0: C0301: Line too long (123/100) (line-too-long)
manager.py:835:0: C0301: Line too long (115/100) (line-too-long)
manager.py:850:0: C0301: Line too long (165/100) (line-too-long)
manager.py:922:0: C0301: Line too long (174/100) (line-too-long)
manager.py:943:0: C0301: Line too long (101/100) (line-too-long)
manager.py:974:0: C0301: Line too long (142/100) (line-too-long)
manager.py:981:0: C0301: Line too long (102/100) (line-too-long)
manager.py:988:0: C0301: Line too long (134/100) (line-too-long)
manager.py:1:0: C0302: Too many lines in module (1017/1000) (too-many-lines)
manager.py:17:0: W0622: Redefining built-in 'ConnectionError' (redefined-builtin)
manager.py:154:11: W0718: Catching too general exception Exception (broad-exception-caught)
manager.py:92:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:102:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:115:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:125:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:135:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:145:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:155:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:168:0: R0914: Too many local variables (19/15) (too-many-locals)
manager.py:181:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
manager.py:188:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:198:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:208:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:338:11: W0718: Catching too general exception Exception (broad-exception-caught)
manager.py:245:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:253:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:271:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:284:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:289:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:296:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:302:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:314:19: W0718: Catching too general exception Exception (broad-exception-caught)
manager.py:309:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:315:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:328:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:339:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:345:12: W0702: No exception type(s) specified (bare-except)
manager.py:168:0: R0911: Too many return statements (7/6) (too-many-return-statements)
manager.py:168:0: R0912: Too many branches (16/12) (too-many-branches)
manager.py:168:0: R0915: Too many statements (55/50) (too-many-statements)
manager.py:235:22: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
manager.py:363:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:412:11: W0718: Catching too general exception Exception (broad-exception-caught)
manager.py:374:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:379:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
manager.py:380:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:394:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:405:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:413:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:424:4: C0415: Import outside toplevel (psutil) (import-outside-toplevel)
manager.py:426:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:435:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:442:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:446:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:450:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:459:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:470:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:475:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:481:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:492:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:600:11: W0718: Catching too general exception Exception (broad-exception-caught)
manager.py:523:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:536:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:546:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:551:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:559:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
manager.py:560:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:570:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:581:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:591:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:601:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:422:0: R0911: Too many return statements (9/6) (too-many-return-statements)
manager.py:422:0: R0912: Too many branches (23/12) (too-many-branches)
manager.py:422:0: R0915: Too many statements (64/50) (too-many-statements)
manager.py:616:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:664:11: W0718: Catching too general exception Exception (broad-exception-caught)
manager.py:625:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:633:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:638:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:643:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:650:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:657:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:662:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:665:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:678:11: W0718: Catching too general exception Exception (broad-exception-caught)
manager.py:676:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:679:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:683:0: R0914: Too many local variables (22/15) (too-many-locals)
manager.py:829:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:834:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:849:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:921:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:932:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:683:0: R0912: Too many branches (39/12) (too-many-branches)
manager.py:683:0: R0915: Too many statements (115/50) (too-many-statements)
manager.py:1013:11: W0718: Catching too general exception Exception (broad-exception-caught)
manager.py:1014:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module example.test
example\test.py:1:0: C0114: Missing module docstring (missing-module-docstring)
example\test.py:122:8: C0103: Constant name "processed_count" doesn't conform to UPPER_CASE naming style (invalid-name)
************* Module modules.api
modules\api.py:106:0: C0301: Line too long (101/100) (line-too-long)
modules\api.py:115:0: C0301: Line too long (103/100) (line-too-long)
modules\api.py:132:0: C0301: Line too long (104/100) (line-too-long)
modules\api.py:225:0: C0301: Line too long (120/100) (line-too-long)
modules\api.py:229:0: C0301: Line too long (111/100) (line-too-long)
modules\api.py:233:0: C0301: Line too long (138/100) (line-too-long)
modules\api.py:238:0: C0301: Line too long (158/100) (line-too-long)
modules\api.py:283:0: C0301: Line too long (194/100) (line-too-long)
modules\api.py:297:0: C0301: Line too long (173/100) (line-too-long)
modules\api.py:311:0: C0301: Line too long (140/100) (line-too-long)
modules\api.py:358:0: C0301: Line too long (126/100) (line-too-long)
modules\api.py:364:0: C0301: Line too long (156/100) (line-too-long)
modules\api.py:401:0: C0301: Line too long (114/100) (line-too-long)
modules\api.py:460:0: C0301: Line too long (105/100) (line-too-long)
modules\api.py:586:0: C0301: Line too long (142/100) (line-too-long)
modules\api.py:647:0: C0301: Line too long (122/100) (line-too-long)
modules\api.py:655:0: C0301: Line too long (122/100) (line-too-long)
modules\api.py:678:0: C0301: Line too long (106/100) (line-too-long)
modules\api.py:687:0: C0301: Line too long (102/100) (line-too-long)
modules\api.py:693:0: C0301: Line too long (102/100) (line-too-long)
modules\api.py:706:0: C0301: Line too long (106/100) (line-too-long)
modules\api.py:711:0: C0301: Line too long (113/100) (line-too-long)
modules\api.py:770:0: C0301: Line too long (111/100) (line-too-long)
modules\api.py:802:0: C0301: Line too long (103/100) (line-too-long)
modules\api.py:815:0: C0301: Line too long (145/100) (line-too-long)
modules\api.py:47:0: C0115: Missing class docstring (missing-class-docstring)
modules\api.py:56:0: C0115: Missing class docstring (missing-class-docstring)
modules\api.py:60:4: C0116: Missing function or method docstring (missing-function-docstring)
modules\api.py:60:4: E0213: Method 'validate_new_url_format' should have "self" as first argument (no-self-argument)
modules\api.py:66:12: W0707: Consider explicitly re-raising using 'raise ValueError(str(e)) from e' (raise-missing-from)
modules\api.py:71:0: C0115: Missing class docstring (missing-class-docstring)
modules\api.py:103:4: C0116: Missing function or method docstring (missing-function-docstring)
modules\api.py:103:4: E0213: Method 'validate_img_path_is_absolute' should have "self" as first argument (no-self-argument)
modules\api.py:114:0: C0115: Missing class docstring (missing-class-docstring)
modules\api.py:127:4: C0116: Missing function or method docstring (missing-function-docstring)
modules\api.py:127:4: E0213: Method 'validate_template_path_abs' should have "self" as first argument (no-self-argument)
modules\api.py:134:4: C0116: Missing function or method docstring (missing-function-docstring)
modules\api.py:134:4: E0213: Method 'validate_filter_type_str' should have "self" as first argument (no-self-argument)
modules\api.py:140:12: W0707: Consider explicitly re-raising using 'raise ValueError(f'Invalid filter_type in batch item: {e}') from e' (raise-missing-from)
modules\api.py:144:4: C0116: Missing function or method docstring (missing-function-docstring)
modules\api.py:144:4: E0213: Method 'validate_match_method_str' should have "self" as first argument (no-self-argument)
modules\api.py:150:12: W0707: Consider explicitly re-raising using 'raise ValueError(f'Invalid match_method in batch item: {e}') from e' (raise-missing-from)
modules\api.py:154:0: C0115: Missing class docstring (missing-class-docstring)
modules\api.py:170:4: C0116: Missing function or method docstring (missing-function-docstring)
modules\api.py:170:4: E0213: Method 'validate_global_filter_type_str' should have "self" as first argument (no-self-argument)
modules\api.py:176:12: W0707: Consider explicitly re-raising using 'raise ValueError(f'Invalid global filter_type: {e}') from e' (raise-missing-from)
modules\api.py:180:4: C0116: Missing function or method docstring (missing-function-docstring)
modules\api.py:180:4: E0213: Method 'validate_global_match_method_str' should have "self" as first argument (no-self-argument)
modules\api.py:186:12: W0707: Consider explicitly re-raising using 'raise ValueError(f'Invalid global match_method: {e}') from e' (raise-missing-from)
modules\api.py:190:0: C0115: Missing class docstring (missing-class-docstring)
modules\api.py:197:0: R0914: Too many local variables (19/15) (too-many-locals)
modules\api.py:236:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules\api.py:224:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\api.py:228:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\api.py:232:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\api.py:237:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\api.py:245:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules\api.py:246:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\api.py:257:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\api.py:261:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\api.py:282:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\api.py:296:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\api.py:310:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\api.py:546:4: R0914: Too many local variables (18/15) (too-many-locals)
modules\api.py:653:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules\api.py:646:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\api.py:654:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\api.py:682:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\api.py:692:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\api.py:701:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\api.py:705:12: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
modules\api.py:707:16: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_422_UNPROCESSABLE_ENTITY, detail=str(e)) from e' (raise-missing-from)
modules\api.py:712:16: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_503_SERVICE_UNAVAILABLE, detail=str(e)) from e' (raise-missing-from)
modules\api.py:716:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\api.py:719:12: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=status.HTTP_500_INTERNAL_SERVER_ERROR, detail=f'Unexpected internal error during URL update: {str(e_update)}') from e_update' (raise-missing-from)
modules\api.py:814:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\api.py:824:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\api.py:829:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\api.py:840:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\api.py:842:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\api.py:197:0: R0915: Too many statements (225/50) (too-many-statements)
modules\api.py:24:0: W0611: Unused TemplateMatchResult imported from modules.datatypes (unused-import)
************* Module modules.app_config
modules\app_config.py:45:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module modules.constants
modules\constants.py:26:0: C0301: Line too long (110/100) (line-too-long)
modules\constants.py:29:0: C0301: Line too long (103/100) (line-too-long)
modules\constants.py:30:0: C0301: Line too long (108/100) (line-too-long)
modules\constants.py:92:0: C0301: Line too long (115/100) (line-too-long)
modules\constants.py:99:0: C0301: Line too long (111/100) (line-too-long)
modules\constants.py:104:0: C0301: Line too long (155/100) (line-too-long)
modules\constants.py:1:0: C0114: Missing module docstring (missing-module-docstring)
modules\constants.py:67:21: E1101: Module 'cv2' has no 'TM_CCOEFF_NORMED' member (no-member)
modules\constants.py:68:21: E1101: Module 'cv2' has no 'TM_SQDIFF_NORMED' member (no-member)
modules\constants.py:69:20: E1101: Module 'cv2' has no 'TM_CCORR_NORMED' member (no-member)
modules\constants.py:70:14: E1101: Module 'cv2' has no 'TM_SQDIFF' member (no-member)
modules\constants.py:71:14: E1101: Module 'cv2' has no 'TM_CCOEFF' member (no-member)
modules\constants.py:72:13: E1101: Module 'cv2' has no 'TM_CCORR' member (no-member)
************* Module modules.datatypes
modules\datatypes.py:41:0: C0301: Line too long (113/100) (line-too-long)
modules\datatypes.py:63:0: C0301: Line too long (104/100) (line-too-long)
modules\datatypes.py:84:0: C0301: Line too long (131/100) (line-too-long)
modules\datatypes.py:118:0: C0301: Line too long (128/100) (line-too-long)
modules\datatypes.py:119:0: C0301: Line too long (107/100) (line-too-long)
modules\datatypes.py:177:0: C0301: Line too long (105/100) (line-too-long)
modules\datatypes.py:267:0: C0301: Line too long (101/100) (line-too-long)
modules\datatypes.py:271:0: C0301: Line too long (102/100) (line-too-long)
modules\datatypes.py:339:0: C0301: Line too long (110/100) (line-too-long)
modules\datatypes.py:346:0: C0301: Line too long (135/100) (line-too-long)
modules\datatypes.py:348:0: C0325: Unnecessary parens after 'not' keyword (superfluous-parens)
modules\datatypes.py:350:0: C0301: Line too long (138/100) (line-too-long)
modules\datatypes.py:370:0: C0301: Line too long (118/100) (line-too-long)
modules\datatypes.py:402:0: C0301: Line too long (111/100) (line-too-long)
modules\datatypes.py:405:0: C0301: Line too long (110/100) (line-too-long)
modules\datatypes.py:410:0: C0301: Line too long (167/100) (line-too-long)
modules\datatypes.py:451:0: C0301: Line too long (104/100) (line-too-long)
modules\datatypes.py:481:0: C0301: Line too long (106/100) (line-too-long)
modules\datatypes.py:500:0: C0301: Line too long (106/100) (line-too-long)
modules\datatypes.py:513:0: C0301: Line too long (117/100) (line-too-long)
modules\datatypes.py:48:4: C0103: Class constant name "CCoeffNormed" doesn't conform to UPPER_CASE naming style (invalid-name)
modules\datatypes.py:49:4: C0103: Class constant name "SqDiffNormed" doesn't conform to UPPER_CASE naming style (invalid-name)
modules\datatypes.py:50:4: C0103: Class constant name "CCorrNormed" doesn't conform to UPPER_CASE naming style (invalid-name)
modules\datatypes.py:51:4: C0103: Class constant name "SqDiff" doesn't conform to UPPER_CASE naming style (invalid-name)
modules\datatypes.py:54:4: C0103: Class constant name "CCoeff" doesn't conform to UPPER_CASE naming style (invalid-name)
modules\datatypes.py:55:4: C0103: Class constant name "CCorr" doesn't conform to UPPER_CASE naming style (invalid-name)
modules\datatypes.py:88:0: R0902: Too many instance attributes (11/7) (too-many-instance-attributes)
modules\datatypes.py:92:4: R0913: Too many arguments (12/5) (too-many-arguments)
modules\datatypes.py:92:4: R0917: Too many positional arguments (12/5) (too-many-positional-arguments)
modules\datatypes.py:88:0: R0903: Too few public methods (1/2) (too-few-public-methods)
modules\datatypes.py:174:4: R0913: Too many arguments (7/5) (too-many-arguments)
modules\datatypes.py:174:4: R0917: Too many positional arguments (7/5) (too-many-positional-arguments)
modules\datatypes.py:171:0: R0903: Too few public methods (1/2) (too-few-public-methods)
modules\datatypes.py:225:0: C0115: Missing class docstring (missing-class-docstring)
modules\datatypes.py:296:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\datatypes.py:307:4: R0913: Too many arguments (6/5) (too-many-arguments)
modules\datatypes.py:307:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
modules\datatypes.py:355:4: R0913: Too many arguments (6/5) (too-many-arguments)
modules\datatypes.py:355:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
modules\datatypes.py:355:4: R0914: Too many local variables (16/15) (too-many-locals)
modules\datatypes.py:417:8: C0415: Import outside toplevel (modules.constants.DEFAULT_CANNY_T1, modules.constants.DEFAULT_CANNY_T2) (import-outside-toplevel)
modules\datatypes.py:486:12: W0707: Consider explicitly re-raising using 'raise InvalidParameterError(f"Invalid image path for format validation: '{image_path}'. Error: {e}") from e' (raise-missing-from)
modules\datatypes.py:504:12: C0415: Import outside toplevel (urllib.parse.urlparse) (import-outside-toplevel)
modules\datatypes.py:8:0: W0611: Unused List imported from typing (unused-import)
************* Module modules.image_processor
modules\image_processor.py:162:0: C0301: Line too long (108/100) (line-too-long)
modules\image_processor.py:239:0: C0301: Line too long (114/100) (line-too-long)
modules\image_processor.py:241:0: C0301: Line too long (108/100) (line-too-long)
modules\image_processor.py:250:0: C0301: Line too long (111/100) (line-too-long)
modules\image_processor.py:289:0: C0301: Line too long (101/100) (line-too-long)
modules\image_processor.py:290:0: C0301: Line too long (106/100) (line-too-long)
modules\image_processor.py:292:0: C0301: Line too long (140/100) (line-too-long)
modules\image_processor.py:296:0: C0301: Line too long (104/100) (line-too-long)
modules\image_processor.py:298:0: C0301: Line too long (157/100) (line-too-long)
modules\image_processor.py:319:0: C0301: Line too long (115/100) (line-too-long)
modules\image_processor.py:355:0: C0301: Line too long (114/100) (line-too-long)
modules\image_processor.py:361:0: C0301: Line too long (118/100) (line-too-long)
modules\image_processor.py:367:0: C0301: Line too long (108/100) (line-too-long)
modules\image_processor.py:454:0: C0301: Line too long (107/100) (line-too-long)
modules\image_processor.py:476:0: C0301: Line too long (102/100) (line-too-long)
modules\image_processor.py:477:0: C0301: Line too long (111/100) (line-too-long)
modules\image_processor.py:479:0: C0301: Line too long (101/100) (line-too-long)
modules\image_processor.py:491:0: C0301: Line too long (108/100) (line-too-long)
modules\image_processor.py:503:0: C0301: Line too long (114/100) (line-too-long)
modules\image_processor.py:547:0: C0301: Line too long (105/100) (line-too-long)
modules\image_processor.py:654:0: C0301: Line too long (147/100) (line-too-long)
modules\image_processor.py:57:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\image_processor.py:91:23: E1101: Module 'cv2' has no 'imdecode' member (no-member)
modules\image_processor.py:91:43: E1101: Module 'cv2' has no 'IMREAD_GRAYSCALE' member (no-member)
modules\image_processor.py:148:23: E1101: Module 'cv2' has no 'cvtColor' member (no-member)
modules\image_processor.py:148:43: E1101: Module 'cv2' has no 'COLOR_BGR2GRAY' member (no-member)
modules\image_processor.py:168:23: E0712: Catching an exception which doesn't inherit from Exception: cv2.error (catching-non-exception)
modules\image_processor.py:167:27: E1101: Module 'cv2' has no 'Canny' member (no-member)
modules\image_processor.py:169:20: E0705: Exception cause set to something which is not an exception, nor None (bad-exception-cause)
modules\image_processor.py:232:8: C0415: Import outside toplevel (modules.constants.CV2_MATCH_METHODS_MAP) (import-outside-toplevel)
modules\image_processor.py:268:12: W0707: Consider explicitly re-raising using 'raise ValidationError(f"Invalid method string '{method_str}' for score calculation: {e}") from e' (raise-missing-from)
modules\image_processor.py:272:8: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
modules\image_processor.py:297:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\image_processor.py:302:4: R0914: Too many local variables (19/15) (too-many-locals)
modules\image_processor.py:354:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\image_processor.py:360:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\image_processor.py:410:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\image_processor.py:424:4: R0914: Too many local variables (49/15) (too-many-locals)
modules\image_processor.py:563:19: E0712: Catching an exception which doesn't inherit from Exception: cv2.error (catching-non-exception)
modules\image_processor.py:559:39: E1101: Module 'cv2' has no 'matchTemplate' member (no-member)
modules\image_processor.py:562:53: E1101: Module 'cv2' has no 'minMaxLoc' member (no-member)
modules\image_processor.py:564:16: E0705: Exception cause set to something which is not an exception, nor None (bad-exception-cause)
modules\image_processor.py:653:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\image_processor.py:659:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\image_processor.py:424:4: R0915: Too many statements (56/50) (too-many-statements)
modules\image_processor.py:41:0: R0903: Too few public methods (1/2) (too-few-public-methods)
************* Module modules.mjpeg
modules\mjpeg.py:86:0: C0301: Line too long (121/100) (line-too-long)
modules\mjpeg.py:284:0: C0301: Line too long (107/100) (line-too-long)
modules\mjpeg.py:295:0: C0301: Line too long (102/100) (line-too-long)
modules\mjpeg.py:319:0: C0301: Line too long (129/100) (line-too-long)
modules\mjpeg.py:337:0: C0301: Line too long (123/100) (line-too-long)
modules\mjpeg.py:357:0: C0301: Line too long (108/100) (line-too-long)
modules\mjpeg.py:372:0: C0301: Line too long (106/100) (line-too-long)
modules\mjpeg.py:384:0: C0301: Line too long (124/100) (line-too-long)
modules\mjpeg.py:400:0: C0301: Line too long (111/100) (line-too-long)
modules\mjpeg.py:418:0: C0301: Line too long (126/100) (line-too-long)
modules\mjpeg.py:432:0: C0301: Line too long (135/100) (line-too-long)
modules\mjpeg.py:439:0: C0301: Line too long (104/100) (line-too-long)
modules\mjpeg.py:458:0: C0301: Line too long (139/100) (line-too-long)
modules\mjpeg.py:465:0: C0301: Line too long (112/100) (line-too-long)
modules\mjpeg.py:480:0: C0301: Line too long (116/100) (line-too-long)
modules\mjpeg.py:492:0: C0301: Line too long (108/100) (line-too-long)
modules\mjpeg.py:500:0: C0301: Line too long (115/100) (line-too-long)
modules\mjpeg.py:510:0: C0301: Line too long (113/100) (line-too-long)
modules\mjpeg.py:549:0: C0301: Line too long (136/100) (line-too-long)
modules\mjpeg.py:552:0: C0301: Line too long (113/100) (line-too-long)
modules\mjpeg.py:555:0: C0301: Line too long (115/100) (line-too-long)
modules\mjpeg.py:599:0: C0301: Line too long (108/100) (line-too-long)
modules\mjpeg.py:630:0: C0301: Line too long (101/100) (line-too-long)
modules\mjpeg.py:636:0: C0301: Line too long (127/100) (line-too-long)
modules\mjpeg.py:642:0: C0301: Line too long (108/100) (line-too-long)
modules\mjpeg.py:648:0: C0301: Line too long (128/100) (line-too-long)
modules\mjpeg.py:653:0: C0301: Line too long (167/100) (line-too-long)
modules\mjpeg.py:662:0: C0301: Line too long (143/100) (line-too-long)
modules\mjpeg.py:33:0: R0902: Too many instance attributes (16/7) (too-many-instance-attributes)
modules\mjpeg.py:85:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:95:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules\mjpeg.py:106:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:168:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules\mjpeg.py:110:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:122:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:159:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:165:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:167:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:169:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:190:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:195:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:211:23: W0718: Catching too general exception Exception (broad-exception-caught)
modules\mjpeg.py:210:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:212:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:219:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:226:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:235:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:243:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:255:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:259:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:276:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:283:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:301:20: E1136: Value 'frame_data['shape']' is unsubscriptable (unsubscriptable-object)
modules\mjpeg.py:310:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:318:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:329:24: W0702: No exception type(s) specified (bare-except)
modules\mjpeg.py:335:20: R1724: Unnecessary "else" after "continue", remove the "else" and de-indent the code inside it (no-else-continue)
modules\mjpeg.py:336:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:345:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:498:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules\mjpeg.py:356:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:371:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:383:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:399:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:455:27: W0718: Catching too general exception Exception (broad-exception-caught)
modules\mjpeg.py:427:32: E1101: Module 'cv2' has no 'imdecode' member (no-member)
modules\mjpeg.py:427:58: E1101: Module 'cv2' has no 'IMREAD_COLOR' member (no-member)
modules\mjpeg.py:431:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:438:32: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:457:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:464:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:479:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:485:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:491:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:499:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:509:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:517:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:522:16: W0702: No exception type(s) specified (bare-except)
modules\mjpeg.py:306:4: R0912: Too many branches (31/12) (too-many-branches)
modules\mjpeg.py:306:4: R0915: Too many statements (132/50) (too-many-statements)
modules\mjpeg.py:534:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:560:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules\mjpeg.py:548:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:561:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:566:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:574:17: E0602: Undefined variable 'INFINITE_TIMEOUT' (undefined-variable)
modules\mjpeg.py:578:32: E1136: Value 'cache_data['shape']' is unsubscriptable (unsubscriptable-object)
modules\mjpeg.py:578:57: E1136: Value 'cache_data['shape']' is unsubscriptable (unsubscriptable-object)
modules\mjpeg.py:605:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:617:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:626:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
modules\mjpeg.py:627:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:631:47: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
modules\mjpeg.py:635:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:640:16: R1720: Unnecessary "else" after "raise", remove the "else" and de-indent the code inside it (no-else-raise)
modules\mjpeg.py:641:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:645:24: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
modules\mjpeg.py:652:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:659:24: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
modules\mjpeg.py:667:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:132:16: W0201: Attribute 'last_activity_time' defined outside __init__ (attribute-defined-outside-init)
modules\mjpeg.py:250:8: W0201: Attribute 'last_activity_time' defined outside __init__ (attribute-defined-outside-init)
modules\mjpeg.py:363:16: W0201: Attribute 'last_activity_time' defined outside __init__ (attribute-defined-outside-init)
************* Module modules.state_managers
modules\state_managers.py:75:19: E0712: Catching an exception which doesn't inherit from Exception: cv2.error (catching-non-exception)
modules\state_managers.py:63:43: E1101: Module 'cv2' has no 'cvtColor' member (no-member)
modules\state_managers.py:63:63: E1101: Module 'cv2' has no 'COLOR_BGR2GRAY' member (no-member)
modules\state_managers.py:65:43: E1101: Module 'cv2' has no 'cvtColor' member (no-member)
modules\state_managers.py:65:63: E1101: Module 'cv2' has no 'COLOR_BGRA2GRAY' member (no-member)
modules\state_managers.py:76:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\state_managers.py:79:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\state_managers.py:110:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\state_managers.py:152:21: E1136: Value 'self._frame_data['shape']' is unsubscriptable (unsubscriptable-object)
modules\state_managers.py:152:51: E1136: Value 'self._frame_data['shape']' is unsubscriptable (unsubscriptable-object)
modules\state_managers.py:175:4: C0116: Missing function or method docstring (missing-function-docstring)
modules\state_managers.py:180:4: C0116: Missing function or method docstring (missing-function-docstring)
modules\state_managers.py:195:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\state_managers.py:231:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\state_managers.py:232:12: W0707: Consider explicitly re-raising using 'raise CacheError(f'Error generating template cache key: {e}') from e' (raise-missing-from)
modules\state_managers.py:234:4: C0116: Missing function or method docstring (missing-function-docstring)
modules\state_managers.py:253:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\state_managers.py:256:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\state_managers.py:258:4: C0116: Missing function or method docstring (missing-function-docstring)
modules\state_managers.py:267:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\state_managers.py:271:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\state_managers.py:274:4: C0116: Missing function or method docstring (missing-function-docstring)
modules\state_managers.py:279:4: C0116: Missing function or method docstring (missing-function-docstring)
************* Module modules.utils
modules\utils.py:109:0: C0301: Line too long (104/100) (line-too-long)
modules\utils.py:139:0: C0301: Line too long (131/100) (line-too-long)
modules\utils.py:151:0: C0301: Line too long (107/100) (line-too-long)
modules\utils.py:154:0: C0301: Line too long (107/100) (line-too-long)
modules\utils.py:157:0: C0301: Line too long (134/100) (line-too-long)
modules\utils.py:170:0: C0301: Line too long (133/100) (line-too-long)
modules\utils.py:173:0: C0301: Line too long (132/100) (line-too-long)
modules\utils.py:182:0: C0301: Line too long (103/100) (line-too-long)
modules\utils.py:196:0: C0301: Line too long (123/100) (line-too-long)
modules\utils.py:28:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\utils.py:30:4: C0116: Missing function or method docstring (missing-function-docstring)
modules\utils.py:39:4: C0116: Missing function or method docstring (missing-function-docstring)
modules\utils.py:49:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\utils.py:54:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\utils.py:60:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\utils.py:62:4: C0116: Missing function or method docstring (missing-function-docstring)
modules\utils.py:93:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\utils.py:100:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\utils.py:104:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\utils.py:113:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\utils.py:138:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\utils.py:153:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\utils.py:169:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\utils.py:178:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\utils.py:195:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\utils.py:211:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\utils.py:214:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\utils.py:74:0: R0912: Too many branches (19/12) (too-many-branches)
modules\utils.py:74:0: R0915: Too many statements (63/50) (too-many-statements)
modules\utils.py:219:0: C0116: Missing function or method docstring (missing-function-docstring)
modules\utils.py:238:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules\utils.py:236:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules\utils.py:235:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\utils.py:237:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\utils.py:239:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\utils.py:242:0: C0116: Missing function or method docstring (missing-function-docstring)
modules\utils.py:266:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules\utils.py:255:25: E1101: Module 'cv2' has no 'imencode' member (no-member)
modules\utils.py:256:28: E1101: Module 'cv2' has no 'IMWRITE_JPEG_QUALITY' member (no-member)
modules\utils.py:258:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
modules\utils.py:261:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\utils.py:264:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\utils.py:267:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\utils.py:281:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules\utils.py:282:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module tests.test_error_handling
tests\test_error_handling.py:199:4: C0415: Import outside toplevel (modules.constants.DEFAULT_CANNY_T1, modules.constants.DEFAULT_CANNY_T2) (import-outside-toplevel)
tests\test_error_handling.py:261:22: E0602: Undefined variable 'ResourceNotFoundError' (undefined-variable)
tests\test_error_handling.py:284:9: E0602: Undefined variable 'ResourceNotFoundError' (undefined-variable)

------------------------------------------------------------------
Your code has been rated at 6.61/10 (previous run: 6.56/10, +0.05)


