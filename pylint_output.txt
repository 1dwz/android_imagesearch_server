************* Module main_instance
main_instance.py:34:7: W0718: Catching too general exception Exception (broad-exception-caught)
main_instance.py:37:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main_instance.py:49:4: C0415: Import outside toplevel (socket) (import-outside-toplevel)
main_instance.py:89:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main_instance.py:90:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main_instance.py:94:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main_instance.py:125:11: W0718: Catching too general exception Exception (broad-exception-caught)
main_instance.py:99:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main_instance.py:102:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main_instance.py:119:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main_instance.py:126:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
main_instance.py:29:21: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
************* Module manager
manager.py:18:0: W0622: Redefining built-in 'ConnectionError' (redefined-builtin)
manager.py:50:11: W0718: Catching too general exception Exception (broad-exception-caught)
manager.py:51:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:99:11: W0718: Catching too general exception Exception (broad-exception-caught)
manager.py:68:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
manager.py:70:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:73:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:82:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
manager.py:83:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:90:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:97:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:100:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:127:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
manager.py:128:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:131:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:139:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:235:11: W0718: Catching too general exception Exception (broad-exception-caught)
manager.py:179:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:180:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:190:20: R1705: Unnecessary "elif" after "return", remove the leading "el" from "elif" (no-else-return)
manager.py:191:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:201:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:206:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:211:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:227:19: W0718: Catching too general exception Exception (broad-exception-caught)
manager.py:226:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:228:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:236:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:168:22: R1732: Consider using 'with' for resource-allocating operations (consider-using-with)
manager.py:255:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:288:11: W0718: Catching too general exception Exception (broad-exception-caught)
manager.py:264:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:267:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
manager.py:268:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:277:19: W0718: Catching too general exception Exception (broad-exception-caught)
manager.py:280:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:283:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:286:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:289:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:303:4: C0415: Import outside toplevel (psutil) (import-outside-toplevel)
manager.py:305:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:309:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:318:11: W0718: Catching too general exception Exception (broad-exception-caught)
manager.py:317:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:319:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:325:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:394:11: W0718: Catching too general exception Exception (broad-exception-caught)
manager.py:375:23: W0718: Catching too general exception Exception (broad-exception-caught)
manager.py:340:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:348:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:355:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:358:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:366:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:369:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:376:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:385:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:395:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:293:0: R0911: Too many return statements (9/6) (too-many-return-statements)
manager.py:293:0: R0912: Too many branches (13/12) (too-many-branches)
manager.py:449:11: W0718: Catching too general exception Exception (broad-exception-caught)
manager.py:410:13: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
manager.py:415:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:424:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:430:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:434:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:439:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:444:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:447:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:450:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:449:4: W0612: Unused variable 'e' (unused-variable)
manager.py:471:11: W0718: Catching too general exception Exception (broad-exception-caught)
manager.py:466:13: W1514: Using open without explicitly specifying an encoding (unspecified-encoding)
manager.py:469:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:472:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:471:4: W0612: Unused variable 'e' (unused-variable)
manager.py:583:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:589:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:594:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:681:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:715:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
manager.py:476:0: R0912: Too many branches (30/12) (too-many-branches)
manager.py:476:0: R0915: Too many statements (95/50) (too-many-statements)
************* Module modules.api
modules\api.py:49:4: E0213: Method 'validate_status' should have "self" as first argument (no-self-argument)
modules\api.py:62:4: E0213: Method 'validate_url' should have "self" as first argument (no-self-argument)
modules\api.py:83:4: E0213: Method 'validate_templates' should have "self" as first argument (no-self-argument)
modules\api.py:94:4: E0213: Method 'validate_threshold' should have "self" as first argument (no-self-argument)
modules\api.py:109:0: R0914: Too many local variables (16/15) (too-many-locals)
modules\api.py:143:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\api.py:172:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\api.py:228:4: R0914: Too many local variables (16/15) (too-many-locals)
modules\api.py:260:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\api.py:314:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\api.py:315:12: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=404, detail=str(e)) from e' (raise-missing-from)
modules\api.py:317:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\api.py:318:12: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=400, detail=str(e)) from e' (raise-missing-from)
modules\api.py:320:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\api.py:321:12: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=500, detail=f'Internal server error: {str(e)}') from e' (raise-missing-from)
modules\api.py:354:18: E0602: Undefined variable 'MJPEGStreamError' (undefined-variable)
modules\api.py:382:4: R0913: Too many arguments (14/5) (too-many-arguments)
modules\api.py:382:4: R0917: Too many positional arguments (14/5) (too-many-positional-arguments)
modules\api.py:382:4: R0914: Too many local variables (19/15) (too-many-locals)
modules\api.py:484:20: E0602: Undefined variable 'ResourceNotFoundError' (undefined-variable)
modules\api.py:485:20: E0602: Undefined variable 'MJPEGStreamError' (undefined-variable)
modules\api.py:490:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\api.py:491:12: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=500, detail=f'服务器内部错误: {str(e)}') from e' (raise-missing-from)
modules\api.py:383:8: W0613: Unused argument 'request' (unused-argument)
modules\api.py:494:45: W0613: Unused argument 'request' (unused-argument)
modules\api.py:504:40: W0613: Unused argument 'request' (unused-argument)
modules\api.py:517:4: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\api.py:535:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\api.py:544:12: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
modules\api.py:545:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\api.py:553:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\api.py:562:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\api.py:563:12: W0707: Consider explicitly re-raising using 'raise HTTPException(status_code=500, detail=f'Internal error updating URL: {str(e)}') from e' (raise-missing-from)
modules\api.py:598:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\api.py:598:20: W1309: Using an f-string that does not have any interpolated variables (f-string-without-interpolation)
modules\api.py:661:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules\api.py:663:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\api.py:109:0: R0915: Too many statements (163/50) (too-many-statements)
************* Module modules.app_config
modules\app_config.py:45:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module modules.datatypes
modules\datatypes.py:220:0: C0301: Line too long (126/100) (line-too-long)
modules\datatypes.py:43:4: C0103: Class constant name "CCoeffNormed" doesn't conform to UPPER_CASE naming style (invalid-name)
modules\datatypes.py:44:4: C0103: Class constant name "SqDiffNormed" doesn't conform to UPPER_CASE naming style (invalid-name)
modules\datatypes.py:45:4: C0103: Class constant name "CCorrNormed" doesn't conform to UPPER_CASE naming style (invalid-name)
modules\datatypes.py:46:4: C0103: Class constant name "SqDiff" doesn't conform to UPPER_CASE naming style (invalid-name)
modules\datatypes.py:47:4: C0103: Class constant name "CCoeff" doesn't conform to UPPER_CASE naming style (invalid-name)
modules\datatypes.py:48:4: C0103: Class constant name "CCorr" doesn't conform to UPPER_CASE naming style (invalid-name)
modules\datatypes.py:69:0: R0902: Too many instance attributes (11/7) (too-many-instance-attributes)
modules\datatypes.py:72:4: R0913: Too many arguments (12/5) (too-many-arguments)
modules\datatypes.py:72:4: R0917: Too many positional arguments (12/5) (too-many-positional-arguments)
modules\datatypes.py:108:4: R0913: Too many arguments (8/5) (too-many-arguments)
modules\datatypes.py:108:4: R0917: Too many positional arguments (8/5) (too-many-positional-arguments)
modules\datatypes.py:69:0: R0903: Too few public methods (1/2) (too-few-public-methods)
modules\datatypes.py:171:4: R0913: Too many arguments (7/5) (too-many-arguments)
modules\datatypes.py:171:4: R0917: Too many positional arguments (7/5) (too-many-positional-arguments)
modules\datatypes.py:168:0: R0903: Too few public methods (1/2) (too-few-public-methods)
modules\datatypes.py:298:4: R0913: Too many arguments (6/5) (too-many-arguments)
modules\datatypes.py:298:4: R0917: Too many positional arguments (6/5) (too-many-positional-arguments)
************* Module modules.image_processor
modules\image_processor.py:84:23: E1101: Module 'cv2' has no 'imdecode' member (no-member)
modules\image_processor.py:84:43: E1101: Module 'cv2' has no 'IMREAD_GRAYSCALE' member (no-member)
modules\image_processor.py:97:12: W0707: Consider explicitly re-raising using 'raise TemplateLoadError(message=f'加载模板时出错: {template_path}', details={'path': template_path, 'error': str(e), 'error_type': type(e).__name__}) from e' (raise-missing-from)
modules\image_processor.py:135:23: E1101: Module 'cv2' has no 'cvtColor' member (no-member)
modules\image_processor.py:135:43: E1101: Module 'cv2' has no 'COLOR_BGR2GRAY' member (no-member)
modules\image_processor.py:144:27: E1101: Module 'cv2' has no 'Canny' member (no-member)
modules\image_processor.py:146:20: W0707: Consider explicitly re-raising using 'raise FilterProcessingError(message='应用 Canny 过滤器失败', details={'t1': t1, 't2': t2, 'error': str(e)}) from e' (raise-missing-from)
modules\image_processor.py:156:12: W0707: Consider explicitly re-raising using 'raise FilterProcessingError(message='图像预处理失败', details={'filter_type': filter_type, 'error': str(e), 'error_type': type(e).__name__}) from e' (raise-missing-from)
modules\image_processor.py:179:29: E1101: Module 'cv2' has no 'TM_CCOEFF_NORMED' member (no-member)
modules\image_processor.py:180:29: E1101: Module 'cv2' has no 'TM_SQDIFF_NORMED' member (no-member)
modules\image_processor.py:181:28: E1101: Module 'cv2' has no 'TM_CCORR_NORMED' member (no-member)
modules\image_processor.py:182:22: E1101: Module 'cv2' has no 'TM_SQDIFF' member (no-member)
modules\image_processor.py:183:22: E1101: Module 'cv2' has no 'TM_CCOEFF' member (no-member)
modules\image_processor.py:184:21: E1101: Module 'cv2' has no 'TM_CCORR' member (no-member)
modules\image_processor.py:199:12: W0707: Consider explicitly re-raising using 'except AttributeError as exc' and 'raise ValidationError(message='匹配方法必须是字符串类型', details={'provided_type': type(method_str).__name__}) from exc' (raise-missing-from)
modules\image_processor.py:220:12: W0707: Consider explicitly re-raising using 'raise ValidationError(message='计算匹配分数失败', details={'match_val': match_val, 'method': method_str, 'error': str(e)}) from e' (raise-missing-from)
modules\image_processor.py:225:4: R0914: Too many local variables (16/15) (too-many-locals)
modules\image_processor.py:277:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\image_processor.py:283:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\image_processor.py:316:12: W0707: Consider explicitly re-raising using 'raise TemplateLoadError(message='处理模板时发生未知错误', details={'template_path': template_path, 'filter_type': filter_type_str, 'error': str(e), 'error_type': type(e).__name__}) from e' (raise-missing-from)
modules\image_processor.py:326:4: R0914: Too many local variables (30/15) (too-many-locals)
modules\image_processor.py:407:25: E1101: Module 'cv2' has no 'matchTemplate' member (no-member)
modules\image_processor.py:408:53: E1101: Module 'cv2' has no 'minMaxLoc' member (no-member)
modules\image_processor.py:410:16: W0707: Consider explicitly re-raising using 'raise TemplateMatchError(message='模板匹配失败', details={'method': match_method, 'error': str(e)}) from e' (raise-missing-from)
modules\image_processor.py:470:12: W0707: Consider explicitly re-raising using 'raise TemplateMatchError(message='模板匹配过程中发生未知错误', details={'template_path': template_path, 'error': str(e), 'error_type': type(e).__name__}) from e' (raise-missing-from)
modules\image_processor.py:36:0: R0903: Too few public methods (1/2) (too-few-public-methods)
************* Module modules.mjpeg
modules\mjpeg.py:21:0: R0902: Too many instance attributes (13/7) (too-many-instance-attributes)
modules\mjpeg.py:50:12: W0707: Consider explicitly re-raising using 'raise MJPEGStreamError(f'无效的 MJPEG URL: {e}') from e' (raise-missing-from)
modules\mjpeg.py:78:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:79:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:157:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules\mjpeg.py:158:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:170:16: W0707: Consider explicitly re-raising using 'raise MJPEGStreamError(f'等待线程结束时出错: {e}') from e' (raise-missing-from)
modules\mjpeg.py:213:16: W0707: Consider explicitly re-raising using 'raise MJPEGStreamError(f'获取帧时出错: {e}') from e' (raise-missing-from)
modules\mjpeg.py:231:8: C0103: Variable name "MAX_CONSECUTIVE_DECODE_ERRORS" doesn't conform to snake_case naming style (invalid-name)
modules\mjpeg.py:234:8: C0103: Variable name "MAX_CONSECUTIVE_EMPTY_CHUNKS" doesn't conform to snake_case naming style (invalid-name)
modules\mjpeg.py:245:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:290:23: W0718: Catching too general exception Exception (broad-exception-caught)
modules\mjpeg.py:270:28: E1101: Module 'cv2' has no 'imdecode' member (no-member)
modules\mjpeg.py:270:54: E1101: Module 'cv2' has no 'IMREAD_COLOR' member (no-member)
modules\mjpeg.py:276:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:291:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:297:12: W0707: Consider explicitly re-raising using 'raise MJPEGStreamError(f'读取帧时出错: {e}') from e' (raise-missing-from)
modules\mjpeg.py:304:27: W0718: Catching too general exception Exception (broad-exception-caught)
modules\mjpeg.py:305:24: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:215:4: R0912: Too many branches (15/12) (too-many-branches)
modules\mjpeg.py:215:4: R0915: Too many statements (64/50) (too-many-statements)
modules\mjpeg.py:325:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules\mjpeg.py:318:28: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:326:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\mjpeg.py:359:12: W0707: Consider explicitly re-raising using 'raise MJPEGStreamError(f'检查健康状态时出错: {e}') from e' (raise-missing-from)
modules\mjpeg.py:391:12: W0707: Consider explicitly re-raising using 'raise MJPEGStreamError(f'更新 MJPEG URL 时出错: {e}') from e' (raise-missing-from)
modules\mjpeg.py:403:12: W0707: Consider explicitly re-raising using 'raise MJPEGStreamError(f'关闭 MJPEG 流读取器时出错: {e}') from e' (raise-missing-from)
modules\mjpeg.py:411:15: W0718: Catching too general exception Exception (broad-exception-caught)
modules\mjpeg.py:412:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module modules.state_managers
modules\state_managers.py:71:0: C0301: Line too long (105/100) (line-too-long)
modules\state_managers.py:94:0: C0301: Line too long (172/100) (line-too-long)
modules\state_managers.py:127:0: C0301: Line too long (120/100) (line-too-long)
modules\state_managers.py:146:0: C0301: Line too long (128/100) (line-too-long)
modules\state_managers.py:176:0: C0301: Line too long (126/100) (line-too-long)
modules\state_managers.py:57:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\state_managers.py:69:19: E0712: Catching an exception which doesn't inherit from Exception: cv2.error (catching-non-exception)
modules\state_managers.py:68:39: E1101: Module 'cv2' has no 'cvtColor' member (no-member)
modules\state_managers.py:68:59: E1101: Module 'cv2' has no 'COLOR_BGR2GRAY' member (no-member)
modules\state_managers.py:70:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\state_managers.py:75:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules\state_managers.py:76:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\state_managers.py:93:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\state_managers.py:101:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\state_managers.py:105:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\state_managers.py:126:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\state_managers.py:145:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\state_managers.py:157:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\state_managers.py:165:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\state_managers.py:175:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\state_managers.py:189:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\state_managers.py:229:12: W0707: Consider explicitly re-raising using 'raise CacheError(f'生成缓存键时出错: {e}') from e' (raise-missing-from)
modules\state_managers.py:266:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\state_managers.py:269:12: W0707: Consider explicitly re-raising using 'raise CacheError(f'存储模板到缓存时出错: {e}') from e' (raise-missing-from)
modules\state_managers.py:295:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\state_managers.py:297:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\state_managers.py:301:12: W0707: Consider explicitly re-raising using 'raise CacheError(f'从缓存获取模板时出错: {e}') from e' (raise-missing-from)
modules\state_managers.py:315:12: W0707: Consider explicitly re-raising using 'raise CacheError(f'清除缓存时出错: {e}') from e' (raise-missing-from)
modules\state_managers.py:330:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\state_managers.py:333:12: W0707: Consider explicitly re-raising using 'raise CacheError(f'获取缓存大小时出错: {e}') from e' (raise-missing-from)
************* Module modules.utils
modules\utils.py:130:0: C0301: Line too long (107/100) (line-too-long)
modules\utils.py:27:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\utils.py:87:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\utils.py:97:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\utils.py:129:20: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\utils.py:145:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\utils.py:152:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\utils.py:162:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\utils.py:163:8: W0707: Consider explicitly re-raising using 'raise ValueError(f'解析 INI 文件时出错: {e}') from e' (raise-missing-from)
modules\utils.py:165:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\utils.py:63:0: R0912: Too many branches (13/12) (too-many-branches)
modules\utils.py:204:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules\utils.py:201:19: W0718: Catching too general exception Exception (broad-exception-caught)
modules\utils.py:200:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\utils.py:202:16: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\utils.py:205:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\utils.py:250:11: W0718: Catching too general exception Exception (broad-exception-caught)
modules\utils.py:240:25: E1101: Module 'cv2' has no 'imencode' member (no-member)
modules\utils.py:241:8: R1705: Unnecessary "else" after "return", remove the "else" and de-indent the code inside it (no-else-return)
modules\utils.py:244:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\utils.py:247:12: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
modules\utils.py:251:8: W1203: Use lazy % formatting in logging functions (logging-fstring-interpolation)
************* Module tests.test_error_handling
tests\test_error_handling.py:1:0: R0801: Similar lines in 2 files
==modules.api:[478:484]
==modules.image_processor:[304:310]
        except Exception as e:
            if isinstance(
                e,
                (
                    ValidationError,
                    ResourceNotFoundError, (duplicate-code)

------------------------------------------------------------------
Your code has been rated at 7.56/10 (previous run: 7.57/10, -0.01)


